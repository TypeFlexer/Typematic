name: 3c Compilation and Test Workflow

on:
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup build directory and Compile 3c target
        env:
          TMPDIR: /home/arun/typematic-actions/tmp
        run: |
          mkdir -p llvm/build
          cd llvm/build
          mkdir -p $TMPDIR
          cmake -G Ninja -DLLVM_ENABLE_PROJECTS=clang -DLLVM_ENABLE_RUNTIMES=compiler-rt -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=Debug -DLLVM_LIT_ARGS=-v -DLLVM_PARALLEL_LINK_JOBS=1 ../
          ninja 3c
          ninja checkcbox-headers # for the typeflexer headers
          echo "$PWD/bin" >> $GITHUB_PATH

      - name: Create temp_output directory
        run: mkdir -p $GITHUB_WORKSPACE/typematic-tests/temp_output

      - name: Compare Files for nsimple.c
        env:
          FILE_NAME: nsimple.c
        run: |
          cd $GITHUB_WORKSPACE/typematic-tests
          file="input/${FILE_NAME}"
          filename=$(basename -- "$file")
          base="${filename%.*}"
          3c -addcr -alltypes "$file" -- > "temp_output/${base}.c"
          
          # Process both files to remove consecutive newlines
          awk 'NF || !seen[$0]++' "temp_output/${base}.c" > "temp_output/${base}_processed.c"
          awk 'NF || !seen[$0]++' "output/${base}_expected.c" > "output/${base}_expected_processed.c"
          
          # Compare the processed files
          diff -w "temp_output/${base}_processed.c" "output/${base}_expected_processed.c"

      - name: Compare Files for simple.c
        env:
          FILE_NAME: simple.c
        run: |
          cd $GITHUB_WORKSPACE/typematic-tests
          file="input/${FILE_NAME}"
          filename=$(basename -- "$file")
          base="${filename%.*}"
          3c -addcr -alltypes "$file" -- > "temp_output/${base}.c"
          
          # Process both files to remove consecutive newlines
          awk 'NF || !seen[$0]++' "temp_output/${base}.c" > "temp_output/${base}_processed.c"
          awk 'NF || !seen[$0]++' "output/${base}_expected.c" > "output/${base}_expected_processed.c"
          
          # Compare the processed files
          diff -w "temp_output/${base}_processed.c" "output/${base}_expected_processed.c"

      - name: Compare Files for structsimple_1.c
        env:
          FILE_NAME: structsimple_1.c
        run: |
          cd $GITHUB_WORKSPACE/typematic-tests
          file="input/${FILE_NAME}"
          filename=$(basename -- "$file")
          base="${filename%.*}"
          3c -addcr -alltypes "$file" -- > "temp_output/${base}.c"
          # Process both files to remove consecutive newlines
          awk 'NF || !seen[$0]++' "temp_output/${base}.c" > "temp_output/${base}_processed.c"
          awk 'NF || !seen[$0]++' "output/${base}_expected.c" > "output/${base}_expected_processed.c"
          
          # Compare the processed files
          diff -w "temp_output/${base}_processed.c" "output/${base}_expected_processed.c"

      - name: Compare Files for structsimple_2.c
        env:
          FILE_NAME: structsimple_2.c
        run: |
          cd $GITHUB_WORKSPACE/typematic-tests
          file="input/${FILE_NAME}"
          filename=$(basename -- "$file")
          base="${filename%.*}"
          3c -addcr -alltypes "$file" -- > "temp_output/${base}.c"
          # Process both files to remove consecutive newlines
          awk 'NF || !seen[$0]++' "temp_output/${base}.c" > "temp_output/${base}_processed.c"
          awk 'NF || !seen[$0]++' "output/${base}_expected.c" > "output/${base}_expected_processed.c"
          
          # Compare the processed files
          diff -w "temp_output/${base}_processed.c" "output/${base}_expected_processed.c"

      - name: Compare Files for structsimple.c
        env:
          FILE_NAME: structsimple.c
        run: |
          cd $GITHUB_WORKSPACE/typematic-tests
          file="input/${FILE_NAME}"
          filename=$(basename -- "$file")
          base="${filename%.*}"
          3c -addcr -alltypes "$file" -- > "temp_output/${base}.c"
          # Process both files to remove consecutive newlines
          awk 'NF || !seen[$0]++' "temp_output/${base}.c" > "temp_output/${base}_processed.c"
          awk 'NF || !seen[$0]++' "output/${base}_expected.c" > "output/${base}_expected_processed.c"
          
          # Compare the processed files
          diff -w "temp_output/${base}_processed.c" "output/${base}_expected_processed.c"

      - name: Compare Files for functionPointers.c
        env:
          FILE_NAME: functionPointers.c
        run: |
          cd $GITHUB_WORKSPACE/typematic-tests
          file="input/${FILE_NAME}"
          filename=$(basename -- "$file")
          base="${filename%.*}"
          3c -addcr -alltypes "$file" -- > "temp_output/${base}.c"
          # Process both files to remove consecutive newlines
          awk 'NF || !seen[$0]++' "temp_output/${base}.c" > "temp_output/${base}_processed.c"
          awk 'NF || !seen[$0]++' "output/${base}_expected.c" > "output/${base}_expected_processed.c"
          
          # Compare the processed files
          diff -w "temp_output/${base}_processed.c" "output/${base}_expected_processed.c"

      - name: Compare Files for complexbuffer_float.c
        env:
          FILE_NAME: complexbuffer_float.c
        run: |
          cd $GITHUB_WORKSPACE/typematic-tests
          file="input/${FILE_NAME}"
          filename=$(basename -- "$file")
          base="${filename%.*}"
          3c -addcr -alltypes "$file" -- > "temp_output/${base}.c"
          # Process both files to remove consecutive newlines
          awk 'NF || !seen[$0]++' "temp_output/${base}.c" > "temp_output/${base}_processed.c"
          awk 'NF || !seen[$0]++' "output/${base}_expected.c" > "output/${base}_expected_processed.c"

          # Compare the processed files
          diff -w "temp_output/${base}_processed.c" "output/${base}_expected_processed.c"
      - name: Compare Files for propagateThroughStructures.c
        env:
          FILE_NAME: propagateThroughStructures.c
        run: |
          cd $GITHUB_WORKSPACE/typematic-tests
          file="input/${FILE_NAME}"
          filename=$(basename -- "$file")
          base="${filename%.*}"
          3c -addcr -alltypes "$file" -- > "temp_output/${base}.c"
          # Process both files to remove consecutive newlines
          awk 'NF || !seen[$0]++' "temp_output/${base}.c" > "temp_output/${base}_processed.c"
          awk 'NF || !seen[$0]++' "output/${base}_expected.c" > "output/${base}_expected_processed.c"

          # Compare the processed files
          diff -w "temp_output/${base}_processed.c" "output/${base}_expected_processed.c"
        
